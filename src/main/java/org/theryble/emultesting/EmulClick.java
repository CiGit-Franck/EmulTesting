package org.theryble.emultesting;

import java.awt.AWTException;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Robot;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;

import com.github.kwhat.jnativehook.GlobalScreen;
import com.github.kwhat.jnativehook.mouse.NativeMouseEvent;
import com.github.kwhat.jnativehook.mouse.NativeMouseListener;

/**
 *
 * @author Franck
 */
public class EmulClick extends JFrame implements NativeMouseListener {

    ListModel<String> listPoint = new DefaultListModel<>();
    boolean isAddPoint = false;
    boolean isPlay = false;
    MouseMotionThread threadMouse;

    /**
     * Creates new form EmulClick
     */
    public EmulClick() {
        setLocationRelativeTo(null);

        initComponents();

        threadMouse = new MouseMotionThread();
        threadMouse.start();
        setVisible(true);
        // Register the global mouse motion listener
        try {
            GlobalScreen.registerNativeHook();
            GlobalScreen.addNativeMouseListener(this);
        } catch (Exception ex) {
            Logger.getLogger(org.theryble.emultesting.EmulClick.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void nativeMouseClicked(NativeMouseEvent e) {
        Point pt = MouseInfo.getPointerInfo().getLocation();
        if (isAddPoint) {
            String point = "Point [" + pt.x + " ," + pt.y + "]";
            ((DefaultListModel<String>) listPoint).addElement(point);
            jlPoint.setModel(listPoint);
        }
    }

    @Override
    public void nativeMousePressed(NativeMouseEvent e) {
        // Not used
    }

    @Override
    public void nativeMouseReleased(NativeMouseEvent e) {
        // Not used
    }

    private void addPoint() {
        if (isAddPoint) {

        }
    }

    private void play() {
        if (isPlay) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jlPoint = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jsDelay = new javax.swing.JSpinner();
        jtbAdd = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jtbPlay = new javax.swing.JToggleButton();
        jlPosition = new javax.swing.JLabel();
        jbClear = new javax.swing.JButton();
        jbDel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        listPoint = new DefaultListModel<>();
        jlPoint.setModel(listPoint);
        jScrollPane1.setViewportView(jlPoint);

        jtbAdd.setText("+");
        jtbAdd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jtbAddStateChanged(evt);
            }
        });

        jLabel1.setText("mn");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jtbAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jsDelay, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jsDelay, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jtbAdd)
                                        .addComponent(jLabel1))
                                .addGap(0, 7, Short.MAX_VALUE)));

        jtbPlay.setText(">");
        jtbPlay.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jtbPlayStateChanged(evt);
            }
        });
        jtbPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbPlayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jlPosition, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtbPlay)
                                .addContainerGap()));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jtbPlay)
                                        .addComponent(jlPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 12, Short.MAX_VALUE)));

        jbClear.setText("C");
        jbClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearActionPerformed(evt);
            }
        });

        jbDel.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jbClear)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jbDel)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jbDel)
                                        .addComponent(jbClear))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15,
                                        Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));

        jbClear.getAccessibleContext().setAccessibleName("jbClear");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbClearActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbClearActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jbClearActionPerformed

    private void jtbPlayActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jtbPlayActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jtbPlayActionPerformed

    private void jtbAddStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jtbAddStateChanged
        isAddPoint = jtbAdd.isSelected();
        if (!isAddPoint) {
            jlPoint.remove(listPoint.getSize() - 1);
        }
    }// GEN-LAST:event_jtbAddStateChanged

    private void jtbPlayStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jtbPlayStateChanged
        isPlay = jtbPlay.isSelected();
        if (!isAddPoint) {
            play();
        }
    }// GEN-LAST:event_jtbPlayStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        SwingUtilities.invokeLater(() -> new EmulClick());
    }

    class MouseMotionThread extends Thread {
        @Override
        public void run() {
            try {
                Robot robot = new Robot();
                while (true) {
                    Thread.sleep(100);
                    Point pt = MouseInfo.getPointerInfo().getLocation();
                    // Color pixel = robot.getPixelColor(pt.x, pt.y);
                    jlPosition.setText("Position [" + pt.x + " ," + pt.y + "]");
                }
            } catch (AWTException | InterruptedException ex) {
                Logger.getLogger(org.theryble.emultesting.EmulClick.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbClear;
    private javax.swing.JButton jbDel;
    private javax.swing.JList<String> jlPoint;
    private javax.swing.JLabel jlPosition;
    private javax.swing.JSpinner jsDelay;
    private javax.swing.JToggleButton jtbAdd;
    private javax.swing.JToggleButton jtbPlay;
    // End of variables declaration//GEN-END:variables
}
